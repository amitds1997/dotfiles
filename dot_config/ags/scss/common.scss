@each $spacing in (5, 10) {
  .spacing-#{$spacing} {
    &.vertical > *:not(:last-child) {
      margin-bottom: calc(0.341rem / 5 * $spacing);
    }
    // should be .horizontal, but setting classnames resets it
    &:not(.vertical) > *:not(:last-child) {
      margin-right: calc(0.341rem / 5 * $spacing);
    }
  }
}

tooltip {
  background-color: transparentize($surface, 0.3);
  border-radius: 0.3rem;
}

switch {
  outline-offset: -4px;
  padding: 3px;
  border-radius: 14px;
  color: $on_surface;
  background-color: $surface_variant;

  &:checked {
    color: $primary;
    background-color: transparentize($primary, 0.15);
  }

  &:hover {
    background-color: transparentize($primary, 0.3);
  }

  slider {
    min-width: 1.2rem;
    min-height: 1.2rem;
    background-color: $on_surface;
    border: 1px solid transparent;
    border-radius: 50%;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    transition: all 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
    -gtk-outline-radius: 20px;
  }

  image {
    color: transparent;
  }
}

entry {
  border-radius: 1rem;
  margin-bottom: 5px;
  padding: 8px;
  border: 1px solid $outline;

  &:focus {
    border: 1px solid $primary;
  }

  image.left {
    margin-right: 0.5rem;
  }

  selection {
    color: transparentize($on_primary, 0.13);
    background-color: $primary;
  }
}
