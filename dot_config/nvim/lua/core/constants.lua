return {
  disabled_plugins = {
    "gzip",
    "matchit",
    "netrwPlugin",
    "rplugin",
    "tarPlugin",
    "tohtml",
    "tutor",
    "zipPlugin",
  },
  misc_icons = {
    NeovimIcon = " ",
  },
  kind_icons = {
    Array = "",
    Boolean = "󰨙",
    Class = "",
    Collapsed = "",
    Color = "",
    Component = "󰅴",
    Constant = "",
    Constructor = "",
    Control = "",
    Copilot = "",
    Enum = "",
    EnumMember = "",
    Event = "",
    Field = "",
    File = "",
    Folder = "",
    Fragment = "󰩦",
    Function = "",
    Interface = "",
    Key = "",
    Keyword = "",
    Macro = "󰁥",
    Method = "",
    Module = "",
    Namespace = "󰦮",
    Null = "",
    Number = "󰎠",
    Object = "",
    Operator = "",
    Package = "",
    Parameter = "",
    Property = "",
    Reference = "",
    Snippet = "",
    StaticMethod = "󰰑",
    String = "",
    Struct = "",
    Text = "",
    TypeAlias = "",
    TypeParameter = "",
    Unit = "",
    Value = "󰎠",
    Variable = "",
  },
  -- Provide pretty names to LSPs in the status line
  lsps = {
    bashls = { name = "Bash LS", priority = 20 },
    clangd = { name = "Clang LS", priority = 20 },
    dockerls = { name = "Docker LS", priority = 20 },
    eslint = { name = "ESLint", priority = 15 },
    gopls = { name = "Go LS", priority = 20 },
    jsonls = { name = "JSON LS", priority = 20 },
    lua_ls = { name = "Lua LS", priority = 20 },
    marksman = { name = "Marksman", priority = 20 },
    basedpyright = { name = "Python LS", priority = 20 },
    ruff = { name = "Ruff LS", priority = 15 },
    terraformls = { name = "Terraform LS", priority = 20 },
    ts_ls = { name = "Typescript LS", priority = 20 },
    yamlls = { name = "YAML LS", priority = 20 },
    cssls = { name = "CSS LS", priority = 20 },
    rust_analyzer = { name = "Rust LS", priority = 20 },
    tombi = { name = "TOML LS", priority = 20 },
    LSP = { name = "LSP", priority = 0 },
  },
  diagnostics_icons = {
    ERROR = "󰅚 ",
    WARN = "󰗖 ",
    INFO = " ",
    HINT = " ",
  },
  dap = {
    Stopped = { "⇢", "DiagnosticWarn", "DapStoppedLine" },
    Breakpoint = { "🞊", "DiagnosticError" },
    BreakpointCondition = { "", "DiagnosticInfo" },
    BreakpointRejected = { "", "DiagnosticWarn" },
    LogPoint = "",
  },
}
