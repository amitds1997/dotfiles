#!/usr/bin/env zsh

# Zephyr
zstyle ':zephyr:plugin:*' 'use-cache' yes
zstyle ':zephyr:plugin:editor' dot-expansion 'yes'

# Editor
zstyle ':zle:edit-command-line' editor nvim

# Case-insensitive match if there are no case-sensitive matches
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}'

# Some functions can be slow to complete, so we use a cache to speed them up
zstyle ':completion:*' use-cache yes
zstyle ':completion:*' cache-path "${XDG_CACHE_HOME:-$HOME/.cache}/zsh/zcompcache"
[[ -d "${XDG_CACHE_HOME:-$HOME/.cache}/zsh" ]] || mkdir -p "${XDG_CACHE_HOME:-$HOME/.cache}/zsh"

# Group matches and describe
zstyle ':completion:*:matches' group 'yes'
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:options' auto-description '%d'

# Array completion element sorting
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters

# Handle directory listings
zstyle ':completion:*:*(cd|z):*' tag-order local-directories directory-stack path-directories
zstyle ':completion:*:-tilde-:*' group-order 'named-directories' 'path-directories' 'users' 'expand' # Handle `~` expansion order
zstyle ':completion:*' squeeze-slashes true # Convert multiple // to a single one
zstyle ':completion:*' special-dirs .. # Allow .. as a valid directory completion

# fzf-tab related configuration
zstyle ':completion:*:git-checkout:*' sort false # disable sort when completing `git checkout`
zstyle ':completion:*:descriptions' format '[%d]' # set descriptions format to enable group support
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS} # Set list-colors to enable filename colorizing
zstyle ':completion:*' menu no # force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':fzf-tab:*' switch-group '<' '>' # switch group using `<` and `>`
zstyle ':fzf-tab:*' fzf-pad 4 # Avoid weird bug where the complete list is not shown
zstyle ':fzf-tab:*' fzf-flags --border-label=' Auto complete/suggestion(s)' --preview-label=' Preview ' # Noice flags
zstyle ':fzf-tab:*' use-fzf-default-opts yes # Make fzf-tab follow FZF_DEFAULT_OPTS

# Use `eza` to show previews for directories
zstyle ':fzf-tab:complete:(cd|z):*' fzf-preview '[[ -d $realpath ]] && eza -1 --color=always $realpath'

# Show package information when using homebrew install/uninstall/search/info
zstyle ':fzf-tab:complete:brew-(install|uninstall|search|info):*-argument-rest' fzf-preview 'HOMEBREW_COLOR=1 brew info $word'

# Use `tldr` for tldr and command information, if available
zstyle ':fzf-tab:complete:tldr:argument-1' fzf-preview 'tldr --color always $word'
zstyle ':fzf-tab:complete:-command-:*' fzf-preview \
  '(out=$(tldr --color always "$word") 2>/dev/null && echo $out) || (out=$(MANWIDTH=$FZF_PREVIEW_COLUMNS man "$word") 2>/dev/null && echo $out) || (out=$(which "$word") && echo $out) || echo "${(P)word}"'

# TODO: Integrate something like: https://github.com/sobolevn/dotfiles/blob/master/config/zshenv to wrap over all kinds of files

# Give a nice output when trying to find processes to kill
zstyle ':completion:*:*:*:*:processes' command "ps -u $USER -o pid,user,comm -w -w"
zstyle ':fzf-tab:complete:(kill|ps):argument-rest' fzf-preview '[[ $group == "[process ID]" ]] && ps -o args= -p $word -ww'
zstyle ':fzf-tab:complete:(kill|ps):argument-rest' fzf-flags --preview-window=down:3:wrap

# vim: ft=zsh sw=2 ts=2 et
